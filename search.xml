<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>动态表格组件,自定义列</title>
    <url>/2024/03/31/two/</url>
    <content><![CDATA[<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><div class="highlight-container" data-rel="Javascript"><figure class="iseeu highlight javascript"><table><tr><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">&lt;!--  <span class="attr">https</span>:<span class="comment">//blog.csdn.net/m0_58953167/article/details/134895241--&gt;</span></span><br><span class="line">  <span class="language-xml"><span class="tag">&lt;<span class="name">el-dialog</span> <span class="attr">v-model</span>=<span class="string">&quot;visible&quot;</span>   @<span class="attr">close</span>=<span class="string">&quot;tableData=[]&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;box&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">el-table</span> <span class="attr">:data</span>=<span class="string">&quot;tableData&quot;</span> <span class="attr">border</span> <span class="attr">style</span>=<span class="string">&quot;width: 100%;margin: 0 auto;&quot;</span> <span class="attr">max-height</span>=<span class="string">&quot;250px&quot;</span> &gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">el-table-column</span> <span class="attr">label</span>=<span class="string">&quot;序号&quot;</span> <span class="attr">align</span>=<span class="string">&quot;center&quot;</span> <span class="attr">width</span>=<span class="string">&quot;70px&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">          <span class="tag">&lt;<span class="name">template</span> #<span class="attr">default</span>=<span class="string">&quot;scope&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">            <span class="tag">&lt;<span class="name">span</span>&gt;</span>&#123;&#123; scope.$index + 1 &#125;&#125;<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">          <span class="tag">&lt;/<span class="name">template</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;/<span class="name">el-table-column</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">el-table-column</span> <span class="attr">v-for</span>=<span class="string">&quot;(column, index) in dynamicColumns&quot;</span> <span class="attr">:key</span>=<span class="string">&quot;index&quot;</span> <span class="attr">:prop</span>=<span class="string">&quot;column.prop&quot;</span> <span class="attr">:label</span>=<span class="string">&quot;column.label&quot;</span> <span class="attr">align</span>=<span class="string">&quot;center&quot;</span> <span class="attr">width</span>=<span class="string">&quot;auto&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">          <span class="tag">&lt;<span class="name">template</span> #<span class="attr">default</span>=<span class="string">&quot;scope&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="comment">&lt;!--            &lt;el-input v-model=&quot;scope.row[column.prop]&quot; size=&quot;small&quot;&gt;&lt;/el-input&gt;--&gt;</span></span></span><br><span class="line"><span class="language-xml">              <span class="tag">&lt;<span class="name">el-form-item</span> &gt;</span></span></span><br><span class="line"><span class="language-xml">                  <span class="tag">&lt;<span class="name">el-input</span>  <span class="attr">:rules</span>=<span class="string">&quot;[&#123; required: true, message: &#x27;输入不能为空&#x27;, trigger: &#x27;blur&#x27; &#125;]&quot;</span> <span class="attr">v-model</span>=<span class="string">&quot;scope.row[column.prop]&quot;</span> <span class="attr">size</span>=<span class="string">&quot;small&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">el-input</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">              <span class="tag">&lt;/<span class="name">el-form-item</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">          <span class="tag">&lt;/<span class="name">template</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;/<span class="name">el-table-column</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">el-table-column</span> <span class="attr">label</span>=<span class="string">&quot;操作&quot;</span> <span class="attr">align</span>=<span class="string">&quot;center&quot;</span> <span class="attr">fixed</span>=<span class="string">&quot;right&quot;</span> <span class="attr">width</span>=<span class="string">&quot;70&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">          <span class="tag">&lt;<span class="name">template</span> #<span class="attr">default</span>=<span class="string">&quot;scope&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">            <span class="tag">&lt;<span class="name">el-button</span> @<span class="attr">click</span>=<span class="string">&quot;deleteTableData(scope.row)&quot;</span> <span class="attr">link</span> <span class="attr">icon</span>=<span class="string">&quot;Delete&quot;</span> <span class="attr">type</span>=<span class="string">&quot;primary&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">el-button</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">          <span class="tag">&lt;/<span class="name">template</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;/<span class="name">el-table-column</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;/<span class="name">el-table</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">&quot;height: 10px&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">el-row</span> <span class="attr">:gutter</span>=<span class="string">&quot;20&quot;</span> <span class="attr">type</span>=<span class="string">&quot;flex&quot;</span> <span class="attr">justify</span>=<span class="string">&quot;center&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">el-col</span> <span class="attr">:span</span>=<span class="string">&quot;6&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">          <span class="tag">&lt;<span class="name">el-button</span> <span class="attr">type</span>=<span class="string">&quot;primary&quot;</span> @<span class="attr">click</span>=<span class="string">&quot;submitRelateData&quot;</span>&gt;</span>提交<span class="tag">&lt;/<span class="name">el-button</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;/<span class="name">el-col</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">el-col</span> <span class="attr">:span</span>=<span class="string">&quot;6&quot;</span>  <span class="attr">class</span>=<span class="string">&quot;text-right&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">          <span class="tag">&lt;<span class="name">el-button</span> <span class="attr">type</span>=<span class="string">&quot;primary&quot;</span> @<span class="attr">click</span>=<span class="string">&quot;addTableData&quot;</span>&gt;</span>添加<span class="tag">&lt;/<span class="name">el-button</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;/<span class="name">el-col</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/<span class="name">el-row</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">  <span class="tag">&lt;/<span class="name">el-dialog</span>&gt;</span></span></span><br><span class="line">&lt;/template&gt;</span><br><span class="line">&lt;script setup &gt;</span><br><span class="line">import &#123;ref&#125; from &#x27;vue&#x27;;</span><br><span class="line">import baseService from &quot;@/service/baseService&quot;;</span><br><span class="line">import &#123;ElMessage&#125; from &quot;element-plus&quot;;</span><br><span class="line">const tableData = ref([]);</span><br><span class="line">const visible = ref(false);</span><br><span class="line">const dynamicColumns = ref([]);</span><br><span class="line">const rowData = ref(&#123;&#125;)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">//动态加载后端对应后续动态字段</span><br><span class="line">const getTeachClass = async (row)=&gt;&#123;</span><br><span class="line">  try &#123;</span><br><span class="line">    const  res = await baseService.post(&quot;/obe/examine/getDynammicField/&quot;,row);</span><br><span class="line">      if(res.code!==0) &#123;</span><br><span class="line">          ElMessage.error(&quot;数据初始化失败!&quot;);</span><br><span class="line">      &#125;</span><br><span class="line">    return res.data;</span><br><span class="line">  &#125;catch&#123;</span><br><span class="line">    ElMessage.error(&quot;获取动态字段列表失败!&quot;);</span><br><span class="line">    return [];</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">//后端初始化列数据</span><br><span class="line">const init =  async (row) =&gt; &#123;</span><br><span class="line">    //回显动态字段</span><br><span class="line">  const columnsFromBackend = [</span><br><span class="line">    //此为固定字段，后端有用到，前后端要统一</span><br><span class="line">    &#123;&quot;prop&quot;:&quot;作业&quot;,&quot;label&quot;:&quot;作业&quot;&#125;,</span><br><span class="line">  ];</span><br><span class="line">  //动态字段加载</span><br><span class="line">  const data = await getTeachClass(row);</span><br><span class="line">  data.forEach((item)=&gt;&#123;</span><br><span class="line">    const newRow = &#123;&#125;;</span><br><span class="line">    newRow[&quot;prop&quot;] = item;</span><br><span class="line">    newRow[&quot;label&quot;] = item;</span><br><span class="line">    columnsFromBackend.push(newRow)</span><br><span class="line">  &#125;)</span><br><span class="line">   //根据后端信息构造动态字段数据 例如:&#123;&quot;prop&quot;:&quot;作业&quot;,&quot;label&quot;:&quot;作业&quot;&#125;,</span><br><span class="line">  dynamicColumns.value = columnsFromBackend;</span><br><span class="line">  </span><br><span class="line">  //后端初始化表格数据</span><br><span class="line">  let rows = await tableDataInit(row)</span><br><span class="line">  for (let i=0;i&lt;rows.length;i++) &#123;</span><br><span class="line">      let newRow=&#123;&#125;</span><br><span class="line">      dynamicColumns.value.forEach((column) =&gt; &#123;</span><br><span class="line">          // 后端获取的某列如果不存在则该列的值为0，可以查看对应sql查出来的数据</span><br><span class="line">          let value = rows[i][column.prop]==null?</span><br><span class="line">              0:(Number.isNaN(Number(rows[i][column.prop]))?</span><br><span class="line">                  rows[i][column.prop]:Number(rows[i][column.prop]));</span><br><span class="line">          newRow[column.prop] = value;</span><br><span class="line">      &#125;);</span><br><span class="line">      tableData.value.push(newRow);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">//回显表格数据</span><br><span class="line">const tableDataInit = async (row)=&gt;&#123;</span><br><span class="line">  try &#123;</span><br><span class="line">    const  res = await baseService.post(&quot;/obe/examine/getObjectRelations/&quot;,row);</span><br><span class="line">      if(res.code!==0) &#123;</span><br><span class="line">          ElMessage.error(&quot;数据初始化失败!&quot;);</span><br><span class="line">      &#125;</span><br><span class="line">    return res.data;</span><br><span class="line">  &#125;catch&#123;</span><br><span class="line">    ElMessage.error(&quot;数据初始化失败!&quot;);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">//提交关联信息列表数据</span><br><span class="line">const submitRelateData = async ()=&gt;&#123;</span><br><span class="line">  // console.log(&quot;表格关联数据:&quot;+tableData.value);</span><br><span class="line">  // console.log(&quot;行数据:&quot;+rowData.value);</span><br><span class="line">  const submitData= &#123;&quot;tableData&quot;:tableData.value,&quot;examineEntity&quot;:rowData.value&#125;;</span><br><span class="line">    let hasInvalidData = false; // 设置标志位，表示是否存在无效数据</span><br><span class="line">  for (let  i=0;i&lt;tableData.value.length;i++) &#123;</span><br><span class="line">      dynamicColumns.value.forEach((item)=&gt;&#123;</span><br><span class="line">        //当前只有非空校验</span><br><span class="line">          if (tableData.value[i][item.prop]===&quot;&quot;||tableData.value[i][item.prop]===undefined) &#123;</span><br><span class="line">              ElMessage.error(&quot;数据不合法,请重新输入!&quot;);</span><br><span class="line">              hasInvalidData = true; // 如果发现无效数据，将标志位设为 true</span><br><span class="line">          &#125;</span><br><span class="line">      &#125;)</span><br><span class="line">      if (hasInvalidData) &#123;</span><br><span class="line">          break; // 如果存在无效数据，跳出外部循环</span><br><span class="line">      &#125;</span><br><span class="line">  &#125;</span><br><span class="line">    if (hasInvalidData) &#123;</span><br><span class="line">        return; // 如果存在无效数据，直接return函数</span><br><span class="line">    &#125;</span><br><span class="line">//更新提交表格</span><br><span class="line">  try &#123;</span><br><span class="line">        const  res = await baseService.post(&quot;/obe/examine/updateTableData/&quot;,submitData);</span><br><span class="line">         if(res.code!==0) &#123;</span><br><span class="line">             ElMessage.error(&quot;数据更新失败!&quot;);</span><br><span class="line">         &#125;</span><br><span class="line">    &#125;catch&#123;</span><br><span class="line">        ElMessage.error(&quot;服务器异常!&quot;);</span><br><span class="line">    &#125;</span><br><span class="line">  tableData.value=[];</span><br><span class="line">  visible.value=false;</span><br><span class="line">&#125;</span><br><span class="line">// 新增一行</span><br><span class="line">const addTableData = ()=&gt;&#123;</span><br><span class="line">  const newRow = &#123;&#125;;</span><br><span class="line">  dynamicColumns.value.forEach((column) =&gt; &#123;</span><br><span class="line">    newRow[column.prop] = null;</span><br><span class="line">  &#125;);</span><br><span class="line">  tableData.value.push(newRow);</span><br><span class="line">&#125;</span><br><span class="line">// 删除</span><br><span class="line">const deleteTableData = (row) =&gt;&#123;</span><br><span class="line">  const index = tableData.value.indexOf(row);</span><br><span class="line">  if (index !== -1) &#123;</span><br><span class="line">    tableData.value.splice(index, 1);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">//获取每条考核信息记录,回显数据初始化函数入口</span><br><span class="line">const setrowData = (row)=&gt;&#123;</span><br><span class="line">  init(row);</span><br><span class="line">  visible.value = true;</span><br><span class="line">  rowData.value = row;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">defineExpose(&#123;</span><br><span class="line">  setrowData</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">&lt;/script&gt;</span><br><span class="line">&lt;style scoped&gt;</span><br><span class="line">.box&#123;</span><br><span class="line">  position: relative;</span><br><span class="line">  .icon&#123;</span><br><span class="line">    position: absolute;</span><br><span class="line">    bottom:10px;</span><br><span class="line">    right: 19px;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">.text-right &#123;</span><br><span class="line">    text-align: right;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure></div>
<p><img src="/images/img.png" alt="/images/img.png"></p>
<p><img src="/images/img_1.png" alt="/images/img_1.png"></p>
<p><img src="/images/img_2.png" alt="/images/img_2.png"></p>
]]></content>
      <categories>
        <category>前端</category>
      </categories>
      <tags>
        <tag>vue3</tag>
      </tags>
  </entry>
</search>
